/*
 * This file is generated by jOOQ.
 */
package tf.sailor.pixivdl.db;


import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import tf.sailor.pixivdl.db.tables.Artwork;
import tf.sailor.pixivdl.db.tables.ArtworkTag;
import tf.sailor.pixivdl.db.tables.Bookmark;
import tf.sailor.pixivdl.db.tables.PixivLogin;
import tf.sailor.pixivdl.db.tables.PixivUser;
import tf.sailor.pixivdl.db.tables.Tag;
import tf.sailor.pixivdl.db.tables.records.ArtworkRecord;
import tf.sailor.pixivdl.db.tables.records.ArtworkTagRecord;
import tf.sailor.pixivdl.db.tables.records.BookmarkRecord;
import tf.sailor.pixivdl.db.tables.records.PixivLoginRecord;
import tf.sailor.pixivdl.db.tables.records.PixivUserRecord;
import tf.sailor.pixivdl.db.tables.records.TagRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<PixivLoginRecord, Integer> IDENTITY_PIXIV_LOGIN = Identities0.IDENTITY_PIXIV_LOGIN;
    public static final Identity<TagRecord, Integer> IDENTITY_TAG = Identities0.IDENTITY_TAG;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ArtworkRecord> ARTWORK_PKEY = UniqueKeys0.ARTWORK_PKEY;
    public static final UniqueKey<ArtworkTagRecord> ARTWORK_TAG_PKEY = UniqueKeys0.ARTWORK_TAG_PKEY;
    public static final UniqueKey<BookmarkRecord> BOOKMARK_PKEY = UniqueKeys0.BOOKMARK_PKEY;
    public static final UniqueKey<PixivLoginRecord> PIXIV_LOGIN_PKEY = UniqueKeys0.PIXIV_LOGIN_PKEY;
    public static final UniqueKey<PixivLoginRecord> PIXIV_LOGIN_PIXIV_ID_KEY = UniqueKeys0.PIXIV_LOGIN_PIXIV_ID_KEY;
    public static final UniqueKey<PixivUserRecord> PIXIV_USER_PKEY = UniqueKeys0.PIXIV_USER_PKEY;
    public static final UniqueKey<PixivUserRecord> PIXIV_USER_USERNAME_KEY = UniqueKeys0.PIXIV_USER_USERNAME_KEY;
    public static final UniqueKey<TagRecord> TAG_PKEY = UniqueKeys0.TAG_PKEY;
    public static final UniqueKey<TagRecord> TAG_ORIGINAL_NAME_KEY = UniqueKeys0.TAG_ORIGINAL_NAME_KEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ArtworkRecord, PixivUserRecord> ARTWORK__ARTWORK_AUTHOR_ID_FKEY = ForeignKeys0.ARTWORK__ARTWORK_AUTHOR_ID_FKEY;
    public static final ForeignKey<ArtworkTagRecord, ArtworkRecord> ARTWORK_TAG__ARTWORK_TAG_ARTWORK_ID_FKEY = ForeignKeys0.ARTWORK_TAG__ARTWORK_TAG_ARTWORK_ID_FKEY;
    public static final ForeignKey<ArtworkTagRecord, TagRecord> ARTWORK_TAG__ARTWORK_TAG_TAG_ID_FKEY = ForeignKeys0.ARTWORK_TAG__ARTWORK_TAG_TAG_ID_FKEY;
    public static final ForeignKey<BookmarkRecord, PixivLoginRecord> BOOKMARK__BOOKMARK_BOOKMARKER_ID_FKEY = ForeignKeys0.BOOKMARK__BOOKMARK_BOOKMARKER_ID_FKEY;
    public static final ForeignKey<BookmarkRecord, ArtworkRecord> BOOKMARK__BOOKMARK_ARTWORK_ID_FKEY = ForeignKeys0.BOOKMARK__BOOKMARK_ARTWORK_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<PixivLoginRecord, Integer> IDENTITY_PIXIV_LOGIN = Internal.createIdentity(PixivLogin.PIXIV_LOGIN, PixivLogin.PIXIV_LOGIN.ID);
        public static Identity<TagRecord, Integer> IDENTITY_TAG = Internal.createIdentity(Tag.TAG, Tag.TAG.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<ArtworkRecord> ARTWORK_PKEY = Internal.createUniqueKey(Artwork.ARTWORK, "artwork_pkey", new TableField[] { Artwork.ARTWORK.ID }, true);
        public static final UniqueKey<ArtworkTagRecord> ARTWORK_TAG_PKEY = Internal.createUniqueKey(ArtworkTag.ARTWORK_TAG, "artwork_tag_pkey", new TableField[] { ArtworkTag.ARTWORK_TAG.ARTWORK_ID, ArtworkTag.ARTWORK_TAG.TAG_ID }, true);
        public static final UniqueKey<BookmarkRecord> BOOKMARK_PKEY = Internal.createUniqueKey(Bookmark.BOOKMARK, "bookmark_pkey", new TableField[] { Bookmark.BOOKMARK.BOOKMARKER_ID, Bookmark.BOOKMARK.ARTWORK_ID }, true);
        public static final UniqueKey<PixivLoginRecord> PIXIV_LOGIN_PKEY = Internal.createUniqueKey(PixivLogin.PIXIV_LOGIN, "pixiv_login_pkey", new TableField[] { PixivLogin.PIXIV_LOGIN.ID }, true);
        public static final UniqueKey<PixivLoginRecord> PIXIV_LOGIN_PIXIV_ID_KEY = Internal.createUniqueKey(PixivLogin.PIXIV_LOGIN, "pixiv_login_pixiv_id_key", new TableField[] { PixivLogin.PIXIV_LOGIN.PIXIV_ID }, true);
        public static final UniqueKey<PixivUserRecord> PIXIV_USER_PKEY = Internal.createUniqueKey(PixivUser.PIXIV_USER, "pixiv_user_pkey", new TableField[] { PixivUser.PIXIV_USER.ID }, true);
        public static final UniqueKey<PixivUserRecord> PIXIV_USER_USERNAME_KEY = Internal.createUniqueKey(PixivUser.PIXIV_USER, "pixiv_user_username_key", new TableField[] { PixivUser.PIXIV_USER.USERNAME }, true);
        public static final UniqueKey<TagRecord> TAG_PKEY = Internal.createUniqueKey(Tag.TAG, "tag_pkey", new TableField[] { Tag.TAG.ID }, true);
        public static final UniqueKey<TagRecord> TAG_ORIGINAL_NAME_KEY = Internal.createUniqueKey(Tag.TAG, "tag_original_name_key", new TableField[] { Tag.TAG.ORIGINAL_NAME }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<ArtworkRecord, PixivUserRecord> ARTWORK__ARTWORK_AUTHOR_ID_FKEY = Internal.createForeignKey(Keys.PIXIV_USER_PKEY, Artwork.ARTWORK, "artwork_author_id_fkey", new TableField[] { Artwork.ARTWORK.AUTHOR_ID }, true);
        public static final ForeignKey<ArtworkTagRecord, ArtworkRecord> ARTWORK_TAG__ARTWORK_TAG_ARTWORK_ID_FKEY = Internal.createForeignKey(Keys.ARTWORK_PKEY, ArtworkTag.ARTWORK_TAG, "artwork_tag_artwork_id_fkey", new TableField[] { ArtworkTag.ARTWORK_TAG.ARTWORK_ID }, true);
        public static final ForeignKey<ArtworkTagRecord, TagRecord> ARTWORK_TAG__ARTWORK_TAG_TAG_ID_FKEY = Internal.createForeignKey(Keys.TAG_PKEY, ArtworkTag.ARTWORK_TAG, "artwork_tag_tag_id_fkey", new TableField[] { ArtworkTag.ARTWORK_TAG.TAG_ID }, true);
        public static final ForeignKey<BookmarkRecord, PixivLoginRecord> BOOKMARK__BOOKMARK_BOOKMARKER_ID_FKEY = Internal.createForeignKey(Keys.PIXIV_LOGIN_PIXIV_ID_KEY, Bookmark.BOOKMARK, "bookmark_bookmarker_id_fkey", new TableField[] { Bookmark.BOOKMARK.BOOKMARKER_ID }, true);
        public static final ForeignKey<BookmarkRecord, ArtworkRecord> BOOKMARK__BOOKMARK_ARTWORK_ID_FKEY = Internal.createForeignKey(Keys.ARTWORK_PKEY, Bookmark.BOOKMARK, "bookmark_artwork_id_fkey", new TableField[] { Bookmark.BOOKMARK.ARTWORK_ID }, true);
    }
}
