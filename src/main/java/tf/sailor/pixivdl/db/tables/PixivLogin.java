/*
 * This file is generated by jOOQ.
 */
package tf.sailor.pixivdl.db.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tf.sailor.pixivdl.db.Keys;
import tf.sailor.pixivdl.db.Public;
import tf.sailor.pixivdl.db.tables.records.PixivLoginRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PixivLogin extends TableImpl<PixivLoginRecord> {

    private static final long serialVersionUID = -1229525296;

    /**
     * The reference instance of <code>public.pixiv_login</code>
     */
    public static final PixivLogin PIXIV_LOGIN = new PixivLogin();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PixivLoginRecord> getRecordType() {
        return PixivLoginRecord.class;
    }

    /**
     * The column <code>public.pixiv_login.id</code>.
     */
    public final TableField<PixivLoginRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('pixiv_login_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.pixiv_login.pixiv_id</code>.
     */
    public final TableField<PixivLoginRecord, Integer> PIXIV_ID = createField(DSL.name("pixiv_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.pixiv_login.refresh_token</code>.
     */
    public final TableField<PixivLoginRecord, String> REFRESH_TOKEN = createField(DSL.name("refresh_token"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>public.pixiv_login</code> table reference
     */
    public PixivLogin() {
        this(DSL.name("pixiv_login"), null);
    }

    /**
     * Create an aliased <code>public.pixiv_login</code> table reference
     */
    public PixivLogin(String alias) {
        this(DSL.name(alias), PIXIV_LOGIN);
    }

    /**
     * Create an aliased <code>public.pixiv_login</code> table reference
     */
    public PixivLogin(Name alias) {
        this(alias, PIXIV_LOGIN);
    }

    private PixivLogin(Name alias, Table<PixivLoginRecord> aliased) {
        this(alias, aliased, null);
    }

    private PixivLogin(Name alias, Table<PixivLoginRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> PixivLogin(Table<O> child, ForeignKey<O, PixivLoginRecord> key) {
        super(child, key, PIXIV_LOGIN);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<PixivLoginRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PIXIV_LOGIN;
    }

    @Override
    public UniqueKey<PixivLoginRecord> getPrimaryKey() {
        return Keys.PIXIV_LOGIN_PKEY;
    }

    @Override
    public List<UniqueKey<PixivLoginRecord>> getKeys() {
        return Arrays.<UniqueKey<PixivLoginRecord>>asList(Keys.PIXIV_LOGIN_PKEY, Keys.PIXIV_LOGIN_PIXIV_ID_KEY);
    }

    @Override
    public PixivLogin as(String alias) {
        return new PixivLogin(DSL.name(alias), this);
    }

    @Override
    public PixivLogin as(Name alias) {
        return new PixivLogin(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PixivLogin rename(String name) {
        return new PixivLogin(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PixivLogin rename(Name name) {
        return new PixivLogin(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
