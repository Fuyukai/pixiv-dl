/*
 * This file is generated by jOOQ.
 */
package tf.sailor.pixivdl.db.tables.records;


import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import tf.sailor.pixivdl.db.tables.ArtworkTag;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArtworkTagRecord extends UpdatableRecordImpl<ArtworkTagRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 460744926;

    /**
     * Setter for <code>public.artwork_tag.artwork_id</code>.
     */
    public void setArtworkId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.artwork_tag.artwork_id</code>.
     */
    @NotNull
    public Integer getArtworkId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.artwork_tag.tag_id</code>.
     */
    public void setTagId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.artwork_tag.tag_id</code>.
     */
    @NotNull
    public Integer getTagId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ArtworkTag.ARTWORK_TAG.ARTWORK_ID;
    }

    @Override
    public Field<Integer> field2() {
        return ArtworkTag.ARTWORK_TAG.TAG_ID;
    }

    @Override
    public Integer component1() {
        return getArtworkId();
    }

    @Override
    public Integer component2() {
        return getTagId();
    }

    @Override
    public Integer value1() {
        return getArtworkId();
    }

    @Override
    public Integer value2() {
        return getTagId();
    }

    @Override
    public ArtworkTagRecord value1(Integer value) {
        setArtworkId(value);
        return this;
    }

    @Override
    public ArtworkTagRecord value2(Integer value) {
        setTagId(value);
        return this;
    }

    @Override
    public ArtworkTagRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ArtworkTagRecord
     */
    public ArtworkTagRecord() {
        super(ArtworkTag.ARTWORK_TAG);
    }

    /**
     * Create a detached, initialised ArtworkTagRecord
     */
    public ArtworkTagRecord(Integer artworkId, Integer tagId) {
        super(ArtworkTag.ARTWORK_TAG);

        set(0, artworkId);
        set(1, tagId);
    }
}
