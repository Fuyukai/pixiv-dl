/*
 * This file is generated by jOOQ.
 */
package tf.sailor.pixivdl.db.tables.records;


import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import tf.sailor.pixivdl.db.tables.PixivLogin;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PixivLoginRecord extends UpdatableRecordImpl<PixivLoginRecord> implements Record3<Integer, Integer, String> {

    private static final long serialVersionUID = 368618928;

    /**
     * Setter for <code>public.pixiv_login.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.pixiv_login.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.pixiv_login.pixiv_id</code>.
     */
    public void setPixivId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.pixiv_login.pixiv_id</code>.
     */
    @NotNull
    public Integer getPixivId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.pixiv_login.refresh_token</code>.
     */
    public void setRefreshToken(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.pixiv_login.refresh_token</code>.
     */
    @NotNull
    public String getRefreshToken() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return PixivLogin.PIXIV_LOGIN.ID;
    }

    @Override
    public Field<Integer> field2() {
        return PixivLogin.PIXIV_LOGIN.PIXIV_ID;
    }

    @Override
    public Field<String> field3() {
        return PixivLogin.PIXIV_LOGIN.REFRESH_TOKEN;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getPixivId();
    }

    @Override
    public String component3() {
        return getRefreshToken();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getPixivId();
    }

    @Override
    public String value3() {
        return getRefreshToken();
    }

    @Override
    public PixivLoginRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PixivLoginRecord value2(Integer value) {
        setPixivId(value);
        return this;
    }

    @Override
    public PixivLoginRecord value3(String value) {
        setRefreshToken(value);
        return this;
    }

    @Override
    public PixivLoginRecord values(Integer value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PixivLoginRecord
     */
    public PixivLoginRecord() {
        super(PixivLogin.PIXIV_LOGIN);
    }

    /**
     * Create a detached, initialised PixivLoginRecord
     */
    public PixivLoginRecord(Integer id, Integer pixivId, String refreshToken) {
        super(PixivLogin.PIXIV_LOGIN);

        set(0, id);
        set(1, pixivId);
        set(2, refreshToken);
    }
}
